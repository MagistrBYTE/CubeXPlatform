//=====================================================================================================================
// Проект: CubeXWindows
// Раздел: Модуль работы с WPF
// Подраздел: Методы расширения
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file CubeXWindowsExtensionColor.cs
*		Методы расширения для работы с цветом WPF.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 24.05.2020
//=====================================================================================================================
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Windows;
using System.Windows.Media;
using System.Windows.Media.Imaging;
//=====================================================================================================================
namespace CubeX
{
	namespace Windows
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup WindowsWPFExtension Методы расширения
		//! \ingroup WindowsWPF
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Статический класс реализующий методы расширения для типа <see cref="Color"/>
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public static class XExtensionWindowsColor
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Сериализация цветового значения в строку
			/// </summary>
			/// <param name="color">Цветовое значение</param>
			/// <returns>Строка</returns>
			//---------------------------------------------------------------------------------------------------------
			public static String SerializeToString(this Color color)
			{
				return (String.Format("{0},{1},{2},{3}", color.R, color.G, color.B, color.A));
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Десереализация цветового значения из строки
			/// </summary>
			/// <param name="data">Строка данных</param>
			/// <returns>Цветовое значение</returns>
			//---------------------------------------------------------------------------------------------------------
			public static Color DeserializeFromString(String data)
			{
				Color color = new Color();
				String[] color_data = data.Split(',');
				color.R = (Byte.Parse(color_data[0]));
				color.G = (Byte.Parse(color_data[1]));
				color.B = (Byte.Parse(color_data[2]));
				color.A = (Byte.Parse(color_data[3]));
				return (color);
			}
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================