<UserControl x:Class="CubeX.Windows.CubeXPropertyInspector"
				xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
				xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				xmlns:ctrl="clr-namespace:CubeX.Windows"
				mc:Ignorable="d" 
				d:DesignHeight="300" d:DesignWidth="500"
			 Loaded="OnUserControl_Loaded">
	<UserControl.Resources>

		<!--Шаблон для отображения свойства логического типа-->
		<DataTemplate x:Key="BooleanModelKey">
			<CheckBox Margin="2 0 0 0" IsChecked="{Binding Value, UpdateSourceTrigger=PropertyChanged}" 
					  VerticalContentAlignment="Center"
					  VerticalAlignment="Center">
				<CheckBox.Style>
					<Style TargetType="CheckBox">
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsReadOnly}" Value="True">
								<Setter Property="Background" Value="{StaticResource ItemBackgroundDisableBrushKey}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</CheckBox.Style>
			</CheckBox>
		</DataTemplate>


		<!--Шаблон для отображения свойства числового типа-->
		<DataTemplate x:Key="NumericModelKey">
			<ctrl:CubeXNumericEditor Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NumberToDoubleConverterKey}}"
								  MaxValue="{Binding MaxValue, Converter={StaticResource NumberToDoubleConverterKey}}"
								  MinValue="{Binding MinValue, Converter={StaticResource NumberToDoubleConverterKey}}"
								  FormatValue="{Binding FormatValue}"
								  IsReadOnly="{Binding IsReadOnly}"
								  DefaultValue="{Binding DefaultValue, Converter={StaticResource NumberToDoubleConverterKey}}"/>
		</DataTemplate>

		
		<!--Шаблон для отображения свойства единиц измерения-->
		<DataTemplate x:Key="MeasurementModelKey">
			<ctrl:CubeXMeasurementEditor Value="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
								  MaxValue="{Binding MaxValue, Converter={StaticResource NumberToDoubleConverterKey}}"
								  MinValue="{Binding MinValue, Converter={StaticResource NumberToDoubleConverterKey}}"
								  FormatValue="{Binding FormatValue}"
								  IsReadOnly="{Binding IsReadOnly}"
								  DefaultValue="{Binding DefaultValue, Converter={StaticResource NumberToDoubleConverterKey}}"/>
		</DataTemplate>

		
		<!--Шаблон для отображения свойства типа перечисления-->
		<DataTemplate x:Key="EnumModelKey">
			<ComboBox ItemsSource="{Binding EnumValues}"
					  SelectedItem="{Binding Value, Converter={StaticResource EnumDescToStringConverterKey}, Mode=TwoWay}"
					  ItemStringFormat="{Binding FormatValue}"
					  IsReadOnly="{Binding IsReadOnly}"
					  VerticalContentAlignment="Center">
				<ComboBox.ItemContainerStyle>
					<Style TargetType="{x:Type ComboBoxItem}">
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsReadOnly}" Value="True">
								<Setter Property="Background" Value="{StaticResource ItemBackgroundDisableBrushKey}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ComboBox.ItemContainerStyle>
			</ComboBox>
		</DataTemplate>

		
		<!--Шаблон для отображения свойства строкового типа-->
		<DataTemplate x:Key="StringModelKey">
			<ctrl:CubeXStackPanel Orientation="Horizontal">
				<TextBox x:Name="textBox" ctrl:CubeXStackPanel.Fill="Fill"
					Text="{Binding Value, Mode=TwoWay, StringFormat=FormatValue, UpdateSourceTrigger=PropertyChanged}"
					IsReadOnly="{Binding IsReadOnly}"
					VerticalContentAlignment="Center"
						 LostFocus="OnTextBoxString_LostFocus">
					<TextBox.Style>
						<Style TargetType="TextBox">
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsValueFromList}" Value="True">
									<Setter Property="Background" Value="LightGreen" />
								</DataTrigger>
								<DataTrigger Binding="{Binding IsReadOnly}" Value="True">
									<Setter Property="Background" Value="{StaticResource ItemBackgroundDisableBrushKey}" />
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Style>
				</TextBox>
				
				<Button Content="D" Visibility="{Binding IsListValues, Converter={StaticResource BooleanFalseToCollapsedConverterKey}}"
						Click="OnButtonStringContextMenu_Click"
						ContextMenuOpening="OnButtonListValuesString_ContextMenuOpening">
					<Button.ContextMenu>
						<ContextMenu>
							<MenuItem Header="Initial menu"/>
							<ContextMenu.ItemContainerStyle>
								<Style TargetType="MenuItem">
									<EventSetter Event="Click" Handler="OnMenuItemSetValueFromListForString_Click" />
								</Style>
							</ContextMenu.ItemContainerStyle>
						</ContextMenu>
					</Button.ContextMenu>
				</Button>

				<Button Content="..." 
						Visibility="{Binding IsButtonMethod, Converter={StaticResource BooleanFalseToCollapsedConverterKey}}"
						Tag="{Binding ButtonMethodName}"
						Click="OnButtonAttribute_Click">
				</Button>

			</ctrl:CubeXStackPanel>
		</DataTemplate>

		
		<!--Шаблон для отображения свойства типа даты времени-->
		<DataTemplate x:Key="DateTimeModelKey">
			<DatePicker SelectedDate="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
						SelectedDateFormat="Long"  VerticalAlignment="Center">
				<DatePicker.Style>
					<Style TargetType="DatePicker">
						<Setter Property="IsEnabled" Value="{Binding IsReadOnly, Converter={StaticResource BooleanInverseConverterKey}}"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding IsReadOnly}" Value="True">
								<Setter Property="Background" Value="{StaticResource ItemBackgroundDisableBrushKey}" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</DatePicker.Style>
			</DatePicker>
		</DataTemplate>

		
		<!--Шаблон для отображения свойства неизвестного типа-->
		<DataTemplate x:Key="InvalidModelKey">
			<TextBlock Text="{Binding Value}" VerticalAlignment="Center"/>
		</DataTemplate>

		<ctrl:CPropertyModelDataSelector x:Key="PropertyModelSelectorKey"
										 Boolean="{StaticResource BooleanModelKey}"
										 Numeric="{StaticResource NumericModelKey}"
										 Measurement="{StaticResource MeasurementModelKey}"
										 Enum="{StaticResource EnumModelKey}"
										 String="{StaticResource StringModelKey}"
										 DateTime="{StaticResource DateTimeModelKey}"
										 Invalid="{StaticResource InvalidModelKey}"/>
	</UserControl.Resources>
	<ctrl:CubeXStackPanel Orientation="Vertical">
		<TextBlock Margin="4">
			<Run Text="Тип:" Foreground="DarkBlue" FontWeight="Bold"/>
			<Run x:Name="textTypeName"/>
		</TextBlock>
		<TextBlock Margin="4">
			<Run Text="Имя:" Foreground="DarkBlue" FontWeight="Bold"/>
			<Run x:Name="textObjectName"/>
		</TextBlock>
		<ctrl:CubeXStackPanel Orientation="Horizontal">
			<ToggleButton x:Name="toogleButtonGroup" ctrl:CubeXStackPanel.Fill="Auto" Margin="4" Checked="OnRadioButtonGroup_Checked">
				<Image Source="/CubeXWindows;component/Resources/Icons/UI/Fatcow_data_sort_24.png" Width="22" Height="22"/>
			</ToggleButton>
			<ToggleButton x:Name="toogleButtonAlphabetically"  ctrl:CubeXStackPanel.Fill="Auto" Margin="4" IsChecked="True" Checked="OnRadioButtonAlphabetically_Checked">
				<Image Source="/CubeXWindows;component/Resources/Icons/UI/Fatcow_sort_columns_24.png" Width="22" Height="22"/>
			</ToggleButton>
			<TextBox ctrl:CubeXStackPanel.Fill="Fill" Margin="2" x:Name="textFilterProperty" 
					 TextChanged="OnTextFilterProperty_TextChanged"
					 VerticalContentAlignment="Center"
					 FontSize="13"/>
			<Button  ctrl:CubeXStackPanel.Fill="Auto" Margin="0 2 2 2" x:Name="buttonClearFilterProperty" MinWidth="22"  
					 Content="X" Click="OnButtonClearFilterProperty_Click"/>
		</ctrl:CubeXStackPanel>
		<DataGrid ctrl:CubeXStackPanel.Fill="Fill"
				  x:Name="dataProperties"
				  AutoGenerateColumns="False"
				  CanUserAddRows="False"
				  CanUserDeleteRows="False"
				  CanUserResizeRows="False"
				  SelectionMode="Single"
				  SelectionUnit="FullRow"
				  HorizontalGridLinesBrush="DarkGray"
				  VerticalGridLinesBrush="DarkGray"
				  SelectionChanged="OnDataProperties_SelectionChanged">
			<DataGrid.Columns>
				<DataGridTemplateColumn Header="Имя" Width="Auto" MinWidth="60">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<Label VerticalContentAlignment="Center"
								   HorizontalContentAlignment="Left"
								   FontSize="12"
								   FontWeight="Bold"
								   Content="{Binding DisplayName}"/>
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTemplateColumn Header="Значение" Width="*" MinWidth="80"
										CellTemplateSelector="{StaticResource PropertyModelSelectorKey}"/>
			</DataGrid.Columns>
			<DataGrid.GroupStyle>
				<GroupStyle ContainerStyle="{StaticResource GroupExpanderHeaderStyleKey}"
							HeaderTemplate="{StaticResource HeaderGroupDataGridTemplateKey}">
				</GroupStyle>
			</DataGrid.GroupStyle>
		</DataGrid>
		<GroupBox Header="Описание">
			<TextBlock Margin="2" x:Name="textDescription" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
		</GroupBox>
	</ctrl:CubeXStackPanel>
</UserControl>
