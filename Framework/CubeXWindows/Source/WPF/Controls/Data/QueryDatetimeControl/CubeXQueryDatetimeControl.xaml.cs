//=====================================================================================================================
// Проект: CubeXWindows
// Раздел: Модуль работы с WPF
// Подраздел: Элементы интерфейса
// Группа: Элементы для работы с данными
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file CubeXQueryDatetimeControl.xaml.cs
*		Элемент служащий для формирования элемента запроса для типов данных дата-время.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 24.05.2020
//=====================================================================================================================
using System;
using System.ComponentModel;
using System.Windows;
using System.Windows.Controls;
//---------------------------------------------------------------------------------------------------------------------
using CubeX.Core;
//=====================================================================================================================
namespace CubeX
{
	namespace Windows
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \addtogroup WindowsWPFControlsData
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Элемент служащий для формирования элемента запроса для типов данных дата-время
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public partial class CubeXQueryDatetimeControl : UserControl
		{
			#region ======================================= ОПРЕДЕЛЕНИЕ СВОЙСТВ ЗАВИСИМОСТИ ===========================
			/// <summary>
			/// Элемент запроса для данных дата-время
			/// </summary>
			public static readonly DependencyProperty QueryItemProperty = DependencyProperty.Register(nameof(QueryItem),
				typeof(CQueryItemDateTime), typeof(CubeXQueryDatetimeControl),
				new FrameworkPropertyMetadata(null, FrameworkPropertyMetadataOptions.AffectsRender));
			#endregion

			#region ======================================= МЕТОДЫ СВОЙСТВ ЗАВИСИМОСТИ ================================
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			/// <summary>
			/// Элемент запроса для данных дата-время
			/// </summary>
			[Browsable(false)]
			public CQueryItemDateTime QueryItem
			{
				get { return (CQueryItemDateTime)GetValue(QueryItemProperty); }
				set { SetValue(QueryItemProperty, value); }
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CubeXQueryDatetimeControl()
			{
				InitializeComponent();
				QueryItem = new CQueryItemDateTime();
				QueryItem.BindingComboBoxToComparisonOperator(comboOperator);
			}
			#endregion

			#region ======================================= ОБРАБОТЧИКИ СОБЫТИЙ =======================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Выбор оператора сравнения
			/// </summary>
			/// <param name="sender">Источник события</param>
			/// <param name="args">Аргументы события</param>
			//---------------------------------------------------------------------------------------------------------
			private void OnComboOperator_SelectionChanged(Object sender, SelectionChangedEventArgs args)
			{
				if(QueryItem.ComparisonOperator == TComparisonQueryOperator.Between)
				{
					textOperator.Visibility = Visibility.Visible;
					textValueRight.Visibility = Visibility.Visible;
				}
				else
				{
					textOperator.Visibility = Visibility.Collapsed;
					textValueRight.Visibility = Visibility.Collapsed;
				}
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================
